services:
  taiga-db:
    image: postgres:latest
    container_name: taiga-db
    environment:
      POSTGRES_DB: taiga
      POSTGRES_USER: taiga
      POSTGRES_PASSWORD: taigapassword
    volumes:
      - taiga-db-data:/var/lib/postgresql/data
    networks:
      - taiga-network
    restart: unless-stopped

  taiga-rabbit:
    image: rabbitmq:latest
    container_name: taiga-rabbit
    environment:
      RABBITMQ_DEFAULT_USER: taiga
      RABBITMQ_DEFAULT_PASS: taigapassword
    networks:
      - taiga-network
    restart: unless-stopped

  taiga-back:
    image: taigaio/taiga-back:latest
    container_name: taiga-back
    ports:
      - "8080:8000"
    environment:
      POSTGRES_DB: taiga
      POSTGRES_USER: taiga
      POSTGRES_PASSWORD: taigapassword
      POSTGRES_HOST: taiga-db
      # RabbitMQ settings
      RABBITMQ_USER: taiga
      RABBITMQ_PASS: taigapassword
      RABBITMQ_HOST: taiga-rabbit
      RABBITMQ_PORT: 5672
      RABBITMQ_VHOST: "/"
      # Taiga settings
      TAIGA_SECRET_KEY: "taiga-back-secret-key"
      TAIGA_SITES_SCHEME: http
      TAIGA_SITES_DOMAIN: localhost:8080
      TAIGA_SUBPATH: ""
      EMAIL_BACKEND: "console"
      # Set Celery broker URL explicitly
      CELERY_BROKER_URL: "amqp://taiga:taigapassword@taiga-rabbit:5672//"
      CELERY_ENABLED: "True"
      CELERY_RESULT_BACKEND: "django-db"
      # Add healthcheck timeout settings
      BROKER_CONNECTION_TIMEOUT: 30
      BROKER_HEARTBEAT: 10
    volumes:
      - taiga-back-media:/taiga-back/media
      - taiga-back-static:/taiga-back/static
    networks:
      - taiga-network
    depends_on:
      - taiga-db
      - taiga-rabbit
    restart: unless-stopped

networks:
  taiga-network:

volumes:
  taiga-db-data:
  taiga-back-media:
  taiga-back-static: